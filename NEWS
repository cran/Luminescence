NEWS for the R Package Luminescence

Changes in version 0.3.4 (7th June, 2014):

  Bugfixes and changes:

         • ‘calc_CentralDose()’: fixed an error that occurred when
           ‘output.plot = FALSE’ (#106, reported by Peter Dobak)

         • ‘analyse_SAR.CWOSL()’: fixed an error that forced a chrash
           if no information in the irradiation time was found in the
           measurement data

         • ‘plot_GrowthCurve()’:

             • Fixed an error that forced a chrash when 'par.default'
               was not found (for option ‘output.plotExtended =
               FALSE’),

             • confusing vector label for De '(intercept)' occurred
               when using ‘fit.method = "LIN"’ removed (#117, reported
               by Thomas Kolb),

             • direct argument ‘xlab’ removed, but it can still be used
               via the ‘...’ argument,

             • support ‘ylim’ and ‘xlim’ for the growth curve via the
               ‘...’ argument,

             • remove some minor output errors (mostly due to negative
               values),

             • prevent function chrash for rare cases using ‘fit.method
               = "LIN"’ where the Lx/Tx error become negative (#118,
               reported by Thomas Kolb).

         • ‘apply_CosmicRayRemoval()’:

             • Optional argument ‘method.Pych.histogram.plot’ added to
               provide a graphical feedback of the removal process,

             • terminal output providing the number of recognised
               channels effected by cosmic-rays per frame has been
               added. (#113 requested by Johanna Lomax),

             • argument ‘silent’ added to suppress terminal output.

         • ‘calc_FiniteMixture()’: fixed a bug when plotting (layout
           removed, #114)

         • ‘plot_KDE()’: calculation of median corrected

         • ‘plot_RadialPlot()’:

             • Tick positions for +/- 2 option corrected (#109),

             • option to handle negative values reduced to 'removed'.

         • ‘plot_AbanicoPlot()’:

             • Overplotting of plot outline fixed,

             • tick positions for +/- 2 option corrected (#109),

             • transparency for 2-sigma-bar added (#108),

             • option to handle negative values disabled.

         • ‘readXSYG2R()’: Corrected for ‘NA’ values appearing rarely
           during TL curve recalculation.

  Internals:

         • The PDF with the S4-class object structure has not been
           linked properly.  Fixed by using a self generated HTML index
           file.

Changes in version 0.3.3 (13th April, 2014):

  New functions:

         • ‘plot_AbanicoPlot()’: New function for standard De
           distribution plots

         • ‘plot_DRTResults()’: New function to visualise dose recovery
           test results

         • ‘calc_Statistics()’: New function to calculate
           De/Age/Distribution statistics that are often used by
           functions in the package

         • ‘apply_CosmicRayRemoval()’: New function to remove cosmic
           rays in ‘RLum.Data.Spectrum’ objects (#80)

         • ‘apply_EfficiencyCorrection()’: New function to allow
           spectral efficiency corrections on ‘RLum.Data.Spectrum’
           objects using a given spectral response data set for the
           used system

  New Data Sets:

         • ‘ExampleData.XSYG’: SAR measurement and TL spectrum imported
           from a Freiberg Instruments XSYG file.

  Changes within the 'RLum' classes and methods:

         • ‘get_RLum.Analysis()’: Add argument ‘keep.object’ to allow
           returing an ‘RLum.Analysis’ object instead of single records
           when using the method. For the sake of consistency with
           previous examples the default option is ‘keep.object =
           FALSE’

         • ‘get_RLum.Analysis()’: In cases for that the output contains
           only one element the element is returned as non-list element
           (no list is returned)

  Further bugfixes and changes:

         • ‘calc_OSLLxTxRatio()’: Considering the case that the number
           of backround intergral channels is smaller than the number
           for signal integral channels by implementing suggestions
           from Rex Galbraith (2014) (#78, reported by Alexandra
           Rowell).

         • ‘calc_OSLLxTxRatio()’: Add preset argument
           ‘background.count.distribution’

         • ‘calc_OSLLxTxRatio()’: Add optional argument ‘sigmab’ and
           extend value output

         • ‘plot_RLum.Analysis()’: Pass ‘col’ argument to the plot

         • ‘calc_FiniteMixture()’: The ‘n.components’ argument now
           accepts vectors in the form of ‘c(min:max)’ to calculate the
           finite mixtures while increasing stepwise the number of k
           components to be fitted

         • ‘calc_FiniteMixture()’: Added plot output when a vector is
           provided for ‘n.components’

         • ‘calc_FiniteMixture()’: Evaluation of BIC scores and maximum
           log-likelihoods estimates when a vector is provided for
           ‘n.components’

         • ‘calc_FiniteMixture()’:Tolerance increased when solving the
           covariance matrix from ‘$double.eps (~10^-16) to
           $double.xmin (~10^-308)’

         • ‘calc_FiniteMixture()’: New examples added

         • ‘analyse_IRSAR.RF()’: Correct an error that occurred when
           ‘NaN’ are produced during De calculation

         • ‘analyse_IRSAR.RF()’: Implement automatic ‘predefined’ curve
           removal from the ‘RLum.Analysis’ input object for data
           imported from XSYG files

         • ‘analyse_IRSAR.RF()’: Add limitation of points used for
           natural signal calculation by using ‘fit.range.min’

         • ‘analyse_IRSAR.RF()’: Correct an error for the case that a
           fitting could not be applied

         • ‘analyse_SAR.CWOSL()’: Add support for palaeodose error as
           rejection criteria

         • ‘Risoe.BINfileData2RLum.Analysis()’: Setting of arguments
           ‘run’, ‘set’ and ‘ltype’ had no effect: Corrected (#87,
           reported by Thomas Kolb).

         • ‘plot_Histogram()’: Add summary options and y-limits

         • ‘plot_Histogram()’: Fix odd plotting (#89)

         • ‘plot_KDE()’: Fix bug for using multiple datasets. KDE can
           now calculated with error-weights; however per default set
           to ‘FALSE’ as it will be a PD plot otherwise

         • ‘plot_KDE()’: Add argument ‘values.cumulative’ to show
           cummulative values individually (#88)

         • ‘plot_KDE()’, ‘plot_Histogram’, ‘plot_RadialPlot’: flexible
           placement of statistical summary and legend added

         • ‘plot_RLum.Data.Spectrum()’: Add plot type ‘single’ to allow
           single curve output and optimise code

         • ‘plot_RLum.Data.Spectrum()’: Add arguments for horizontal
           (‘bin.rows’) and vertical binning (‘bin.cols’)

         • ‘plot_RLum.Data.Spectrum()’: Add argument ‘bg.channels’ to
           allow the specification of background channels that are
           subtracted from the other channels.

         • ‘plot_RLum.Data.Spectrum()’: Correct an error that occurred
           if no xlab or ylab information are provided

         • ‘plot_RLum.Data.Spectrum()’: Add new plot option
           ‘mutiple.lines’, allowing to draw all frames in one plot

         • ‘plot_GrowthCurve()’: Correct ‘mtext’ behaviour as expected
           (#91)

         • ‘plot_GrowthCurve()’: Now resets global ‘par’ parameter
           after plotting

         • ‘plot_RadialPlot()’: Provide note on polygone behaviour
           (#90)

         • ‘plot_RadialPlot()’: Correct 2-sigma label plotting (#92)

         • ‘plot_RadialPlot()’: Some minor graphical adjustments

         • ‘merge_Risoe.BINfileData()’: New argument added
           ‘position.number.append.gap’ allowing to account for a
           specific position number structure within the data sets
           (#94, requested by Thomas Kolb)

         • ‘merge_Risoe.BINfileData()’: Correct an error that occured
           for merging more than two BIN-files (#93, reported by Thomas
           Kolb)

         • ‘readXSYG2R()’: Rewritten TL curve recalculation routine;
           argument ‘recalculate.TL.curves’ set now to ‘TRUE’ by
           default.  (#86)

         • ‘calc_FuchsLang2001()’: Function now allows ‘RLum.Results’
           object as input and returns an ‘RLum.Results’ object.

         • ‘calc_FuchsLang2001()’: Now supports the ‘...’ argument.
           The arguments ‘cex.global’, ‘main’, ‘xlab’, ‘sample.mtext’
           have been therefore removed.

         • ‘calc_AliquotSize()’: added the option to estimate the
           amount of grains on an aliquot by monte carlo simulation;
           implement ‘RLum.Results’ object handling (output)

         • ‘calc_MaxDose3()’: removed the option to print results to a
           file

         • ‘calc_MinDose3()’: removed the option to print results to a
           file

         • ‘calc_MinDose4()’: removed the option to print results to a
           file

         • ‘calc_CosmicDoseRate()’: Implement ‘RLum.Results’ object
           handling (output)

         • ‘fit_CWCurve()’: Now uses package colour library and ‘par’
           settings will be reset after plotting

         • ‘fit_LMCurve()’: Now uses package colour library and ‘par’
           settings will be reset after plotting

Changes in version 0.3.2 (7th January, 2014):

  Bugfixes and changes:

         • ‘calc_OSLLxTxRatio’: Correct critical error that calculates
           the Lx/Tx ratio without background subtraction since version
           0.3. This error had been fixed previously (version 0.2.2),
           however, it had been accidentally reintroduced with version
           0.3. (#82)

         • ‘analyse_SAR.TL’: Added option ‘"EXCLUDE"’ in the argument
           ‘sequence.structure’ to support exclusion of TL curves (this
           fixes #27)

         • ‘calc_TLLxTxRatio’: Added ‘NULL’ object support for
           background curves

         • ‘fit_LMCurve’: Extent ‘component.contribution.matrix’ to
           allow calculation of absolute contributions to sum signal of
           each component (#67)

         • ‘fit_CWCurve’: Extent ‘component.contribution.matrix’ to
           allow calculation of absolute contributions to sum signal of
           each component (#67)

         • ‘CW2pHMi’: Implement a warning message when ‘NA’ values are
           produced by the function ‘approx’ are deteted (#8)

         • ‘CW2pHMi’: Remove unwanted data output accidentally
           introduced during bug fixing

         • ‘plot_RadialPlot’: added parameters: line, line.col,
           line.label, centrality, negatives

         • ‘plot_RadialPlot’: robust coding of x-axes labels

         • ‘plot_RadialPlot’: major bug fixed: polygon ends now at
           highest data value, not at z-axis

         • ‘plot_RadialPlot’: z-axis now scales with user-defined
           x-axis limits

         • ‘plot_RadialPlot’: axes lengths when user-define

         • ‘plot_RadialPlot’: some minor tweaks for code and plot
           polishing

         • ‘plot_GrowthCurve’: prevent rare error occured during MC
           simulation for EXP+LIN error estimation

         • ‘plot_RLum’: fix error for passing ‘RLum.Data.Spectrum’
           objects

         • ‘analyse_SAR.CWOSL’: add argument ‘dose.points’

         • ‘calc_CosmicDoseRate’: remove unwanted terminal output

Changes in version 0.3.1 (15th December, 2013):

  S4-classes and methods:

         • Added S4-class ‘RLum.Data.Spectrum’ for TL/OSL spectra.

         • ‘set_RLum.Data.Spectrum()’: Constructor method for
           ‘RLum.Data.Spectrum’ objects

         • ‘merge_RLum.Results()’: Correct an error that results in a
           false combination of list elements

         • ‘get_Risoe.BINfileData()’: get-method has been added
           formally.  In fact it does not allow a direct access, but is
           showing a message.

         • ‘get_RLum.Analysis()’: Added argument ‘curveType’ to method.

         • ‘get_RLum.Analysis()’: Allow more flexibility using the
           argument ‘recordType’ to method.

         • ‘get_RLum.Analysis()’: Added argument ‘RLum.type’ to method.

         • ‘RLum.Results()’: Add generic show method (#68)

         • ‘RLum.Data.Curve()’: get-method for object class has been
           added (#57)

  New functions:

         • ‘plot_RLum.Data.Spectrum()’: Plot function for corresponding
           S4-class object

         • ‘length_RLum.Analyis()’: Return length (i.e. number of
           records) for ‘RLum.Analysis’ objects

         • ‘calc_MaxDose3()’: Apply the maximum age model to a given De
           distribution (#45, suggestion by Kathryn Fitzsimmons)

  Bugfixes and changes:

         • ‘calc_MinDose3()’: Graphical output has been changed from
           postscript to display device output; ‘output.plot = TRUE’ as
           default

         • ‘calc_MinDose3()’: Implement ‘RLum.Results’ object handling
           (input/output)

         • ‘calc_MinDose4()’: Graphical output has been changed from
           postscript to display device output; ‘output.plot = TRUE’ as
           default

         • ‘calc_MinDose4()’: Implement ‘RLum.Results’ object handling
           (input/output)

         • ‘calc_CommonDose()’: Implement ‘RLum.Results’ object
           handling (input/output)

         • ‘calc_FiniteMixture()’: Implement ‘RLum.Results’ object
           handling (input/output)

         • ‘calc_HomogenityTest()’: Implement ‘RLum.Results’ object
           handling (input/output)

         • ‘calc_CentralDose()’: Implement ‘RLum.Results’ object
           handling (input/output)

         • ‘calc_CentralDose()’: Now working with data sets with no
           overdispersion (#65)

         • ‘plot_KDE()’: Option ‘na.exclude’ did not work as expected
           and ended up with an error message; corrected

         • ‘plot_KDE()’: Add statistic paramter for kurtosis and
           skewness for the argument ‘summary’

         • ‘plot_KDE()’: Add argument ‘output’

         • ‘plot_KDE()’: Add output values ‘summary.pos’

         • ‘plot_KDE()’: Now allows keywords for ‘summary.pos’, e.g.
           'topleft'

         • ‘plot_RLum.Analysis()’: ‘log’ argument will now be passed to
           the output plot

         • ‘plot_GrowthCurve()’: Now an additional ‘Formula’ object
           containing the equation used for fitting is provided with
           the output.

         • ‘analyse_SAR.CWOSL()’: Argument ‘output.plot.single’ added
           to allow for separate plot outputs

         • ‘plot_RadialPlot’: Function has been completely new written

         • ‘readXSYG2R’: Add support for TL/OSL spectra has been added
           by using ‘RLum.Data.Spectrum’ objects

         • ‘plot_RLum’: Add support for ‘RLum.Data.Spectrum’

         • ‘plot_RLum.Analysis’: Add support for ‘RLum.Data.Spectrum’

         • ‘plot_RLum.Data.Curve’: Forward further plot arguments, like
           ‘lwd’.  ‘pch’, ‘lty’

         • ‘readXSYG2R’: Considerably import performance improvements
           by using the argument ‘useInternalNodes = TRUE’ during XML
           parsing

         • ‘readXSYG2R’: Add argument ‘recalculate.TL.curves’ to allow
           temperature values instead of time values in the x-axis for
           TL curves; along with this option the heating rate will be
           calculated and stored in the info element ‘RATE’

         • ‘plot_RLum.Data.Curve’: Allow for more flexible ‘TL’ curve
           detection

         • ‘calc_AliquotSize()’: Fix return values (#66)

         • ‘calc_CosmicDoseRate()’: Fitting procedure for the
           soft-component optimised (#75)

         • ‘calc_CosmicDoseRate()’: Erroneous estimation of parameters
           F, J and H fixed. Non-linear parts now fitted with a
           3-degree polynomial (#76)

         • ‘calc_CosmicDoseRate()’: Conversion from geographic to
           geomagnetic latitude fixed (#71)

         • ‘fit_LMCurve()’: Correct for an error in the plotting of the
           component to sum contribution

         • ‘fit_CWCurve()’: Correct for an error in the plotting of the
           component to sum contribution

         • ‘fit_CWCurve()’: Improve convergence stability during
           fitting by using a two step fitting approach; add comment
           that the functions has beta status

         • ‘fit_CWCurve()’: Correct for an error, for component signal
           plotting (#77)

         • ‘calc_OSLLxTxRatio’: Add error message for the case signal
           integral > background integral

  Example data:

         • ‘ExampleData.RLum.Analysis’: data set has been replaced, as
           the containing curve elements did not fit the changed
           ‘RLum.Data.Curve’ object

  Internals:

         • Complete conversion to ‘inlinedoc’ documentation for the
           entire package

         • Allow more fun during plotting.

Changes in version 0.3 (1st October, 2013):

  Substantial Changes:

         • The most substantial changes in this package version are
           introduced by the usage of S4 objects. Inherited classes
           have been designed to store input and output data for
           luminescence dating data analysis. Most of the existing
           functions now allow RLum objects as input data along with
           generic R objects. The S4-class structure in this package is
           shown in the additional PDF provided with this package. The
           following S4 object classes are implemented:

  Added S4-classes:

         • ‘RLum’ (virtual class)

         • ‘RLum.Data’ (virtual class)

         • ‘RLum.Data.Curve’ (object containing one measured curve)

         • ‘RLum.Analysis’ (contains RLum.Data (e.g. RLum.Data.Curve)
           objects for protocol analysis)

         • ‘RLum.Results’ (contains output of package functions)

  Added S4-class methods:

         • ‘set_RLum.Data.Curve()’: Constructor method for
           ‘RLum.Data.Curve’ objects

         • ‘set_RLum.Analysis()’: Constructor method for
           ‘RLum.Analysis’ objects

         • ‘get_RLum.Analyis()’: Accessor method for ‘RLum.Analysis’
           objects

         • ‘set_RLum.Results()’: Constructor method for ‘RLum.Results’
           objects

         • ‘get_RLum.Results()’: Accessor method for ‘RLum.Results’
           objects

         • ‘merge_RLum.Results()’: Function to merge ‘RLum.Results’
           objects

         • ‘get_structure.RLum.Analysis()’: to parse the structure of
           an ‘RLum.Analysis’ object

         • ‘set_Risoe.BINfileData()’: Constructor method for
           ‘Risoe.BINfileData’ objects

  New Functions:

         • ‘plot_RLum()’: Wrapper function for plotting various
           ‘RLum’-objects

         • ‘plot_RLum.Data.Curve()’: Plot function for
           ‘RLum.Data.Curve’ objects. Usually accessed by ‘plot_RLum()’

         • ‘plot_RLum.Analysis()’: Plot function for ‘RLum.Analysis’
           objects. Usually accessed by ‘plot_RLum()’

         • ‘Risoe.BINfileData2RLum.Analysis()’: Converts parts of an
           ‘Risoe.BINfileData’ object to an ‘RLum.Analysis’ object,
           depending on the chosen position, run/set or record id.

         • ‘Risoe.BINfileData2RLum.Data.Curve()’: Lossy conversion of
           an ‘Risoe.BINfileData’ object to an ‘RLum.Data.Curve’ object

         • ‘writeR2BIN()’: Function to export ‘Risoe.BINfileData’
           objects to BIN or BINX files

         • ‘merge_Risoe.BINfileData()’: Merge BIN/BINX files or
           ‘Risoe.BINfileData’ objects

         • ‘analyse_SAR.CWOSL()’: Function to analyse SAR CW-OSL
           measurements, will at some time replace the exisiting
           function ‘Analyse_SAR.OSLdata’

         • ‘analyse_SAR.TL()’: Function to analyse SAR TL measurements
           (beta version)

         • ‘calc_TLLxTxRatio()’: Function to calculate Lx/Tx ratios for
           TL curves used by ‘analyse_SAR.TL()’ (beta version)

         • ‘analyse_IRSAR.RF()’: Function to analyse IRSAR RF
           measurements according to Erfurt et al. (2003)

         • ‘calc_CosmicDoseRate()’: Function to calculate the cosmic
           dose rate

         • ‘calc_HomogeneityTest()’: Function to apply the homogenity
           test after Galbraith (2003)

         • ‘calc_AliquotSize()’: Function to estimate the amount of
           grains on an aliquot

         • ‘readXSYG2R()’: Function to support the Freiberg Instruments
           XSYG file format

  New Data Sets:

         • ‘ExampleData.RLum.Analysis’: Luminescence dating measurement
           dataset as ‘RLum.Analysis’ object

         • ‘BaseDataSet.CosmicDoseRate’: Data set used by the function
           ‘calc_CosmicDoseRate()’

         • ‘ExampleData.BINfileData’: dataset now contains two objects
           ‘CWOSL.SAR.Data’ and ‘TL.SAR.Data’ (depending examples have
           been modified)

  Function Renaming:

         • ‘Calc_OSLLxTxRatio()’: Function renamed to
           ‘calc_OSLLxTxRatio()’

         • ‘Calc_CommonDose()’: Function renamed to ‘calc_CommonDose()’

         • ‘Calc_CentralDose()’: Function renamed to
           ‘calc_CentralDose()’

         • ‘Calc_FiniteMixture()’: Function renamed to
           ‘calc_FiniteMixture()’

         • ‘Calc_MinDose3()’: Function renamed to ‘calc_MinDose3()’

         • ‘Calc_MinDose4()’: Function renamed to ‘calc_MinDose4()’

         • ‘Calc_FadingCorr()’: Function renamed to ‘calc_FadingCorr()’

         • ‘Calc_FuchsLang2001()’: Function renamed to
           ‘calc_FuchsLang2001()’

         • ‘plot_BINfileData()’: Function renamed to
           ‘plot_Risoe.BINfileData()’ for the sake of consistency

  Bug Fixes and Further Changes:

         • ‘calc_OSLLxTxRatio()’: Function now allows for a ‘matrix’ as
           input object

         • ‘calc_OSLLxTxRatio()’: Function now returns an
           ‘RLum.Results’ object

         • ‘Analyse_SAR.OSLdata()’: Function modified according to the
           changes in the function ‘calc_OSLLxTxRatio()’

         • ‘Analyse_SAR.OSLdata()’: Function corrected for an error
           that occured with more than one recyling point

         • ‘Analyse_SAR.OSLdata()’: Function corrected for an error
           that occured when the dose of the first recycling point was
           used twice

         • ‘Risoe.BINfileData-class’: An error in the show method has
           been corrected

         • ‘plot_GrowthCurve()’: An error occurred if no fitting could
           be applied. Corrected by setting De to NA

         • ‘plot_GrowthCurve()’: The function now checks if at least
           two regeneration points are given

         • ‘plot_GrowthCurve()’: Function corrected for an infinite
           loop error occured using only two dose points and the EXP
           fit option

         • ‘plot_GrowthCurve()’: The function now provides an extra
           argument ‘na.exclude’ to exclude ‘NA’ values

         • ‘plot_KDE()’: The function now provides an extra argument
           ‘na.exclude’ to exclude ‘NA’ values

         • ‘plot_KDE()’: The function now allows for an ‘RLum.Results’
           object as input object

         • ‘plot_KDE()’: The function now allows for plotting multiple
           data sets

         • ‘plot_Histogram()’: The function now provides an extra
           argument ‘na.exclude’ to exclude ‘NA’ values

         • ‘plot_Histogram()’: The function now allows for an
           ‘RLum.Results’ object as input object

         • ‘plot_RadialPlot()’: The function now provides an extra
           argument ‘na.exclude’ to exclude ‘NA’ values

         • ‘CW2pLMi()’: A test has been implemented to check if P=0
           (which is not allowed)

         • ‘CW2pLMi()’: Now an ‘RLum.Data.Curve’ object is allowed as
           input and an object of the same data type as the input will
           be returned

         • ‘CW2pHMi()’: Now an ‘RLum.Data.Curve’ object is allowed as
           input and an object of the same data type as the input will
           be returned

         • ‘CW2pPMi()’: Now an ‘RLum.Data.Curve’ object is allowed as
           input and an object of the same data type as the input will
           be returned

         • ‘CW2pLM()’: Now an ‘RLum.Data.Curve’ object is allowed as
           input and an object of the same data type as the input will
           be returned

         • ‘fit_CWCurve()’: The function now returns an ‘RLum.Results’
           object and as input an ‘RLum.Data.Curve’ object is now
           allowed

         • ‘fit_CWCure()’: An additional
           ‘component.contribution.matrix’ is now returned to allow for
           individual component to sum contribution plots

         • ‘fit_CWCure()’: A critical error has been corrected in the
           used fitting equation. Now it has been set to f(t) =
           I0[i]*lambda[i]*exp(-lambda[i]*t)

         • ‘fit_LMCurve()’: The function now returns an ‘RLum.Results’
           object and as input an ‘RLum.Data.Curve’ object is now
           allowed

         • ‘fit_LMCure()’: An additional
           ‘component.contribution.matrix’ is now returned to allow for
           individual component to sum contribution plots

         • ‘readBIN2R()’: BINX file format support has been added

         • ‘readBIN2R()’: An argument ‘forced.VersionNumber’ has been
           added to cheat the internal version check routine if needed

         • ‘Risoe.BINfileData-class’: The *.binx file format support
           has been added

         • ‘RLum.Analysis’: Add argument ‘get.index’ just to show the
           index values

  Internals:

         • We partially started to create package documentation using
           the R pacakge 'inlinedocs', meaning that the documentation
           is now be part of the source code itself

         • A namespace .LuminescenceEnv in zzz.R has been added

         • A variable ‘col’ has been added to the namespace
           ‘.LuminescenceEnv’ in the file zzz.R to define a standard
           colour palette for graphical output in package

         • NEWS are now provided as *.Rd file; der corresponding ASCII
           file is produced using the function Rd2txt

         • An unicode character for the temperature degree symbol 'deg.
           C' has been added

         • The S4-object structure has been added as PDF documentation
           to the package

