NEWS for the R Package Luminescence

Changes in version 0.3 (1st October, 2013):

  Substantial Changes:

         • The most substantial changes in this package version are
           introduced by the usage of S4 objects. Inherited classes
           have been designed to store input and output data for
           luminescence dating data analysis. Most of the existing
           functions now allow for RLum objects as input data along
           with generic R objects. The S4-class structure in this
           package is shown in the additional PDF provided with this
           package. The following S4 object classes are implemented:

  Added S4-classes:

         • ‘RLum’ (virtual class)

         • ‘RLum.Data’ (virtual class)

         • ‘RLum.Data.Curve’ (object containing one measured curve)

         • ‘RLum.Analysis’ (contains RLum.Data (e.g. RLum.Data.Curve)
           objects for protocol analysis)

         • ‘RLum.Results’ (contains output of package functions)

  Added S4-class methods:

         • ‘set_RLum.Data.Curve()’: Constructor method for
           ‘RLum.Data.Curve’ objects

         • ‘set_RLum.Analysis()’: Constructor method for
           ‘RLum.Analysis’ objects

         • ‘get_RLum.Analyis()’: Accessor method for ‘RLum.Analysis’
           objects

         • ‘set_RLum.Results()’: Constructor method for ‘RLum.Results’
           objects

         • ‘get_RLum.Results()’: Accessor method for ‘RLum.Results’
           objects

         • ‘merge_RLum.Results()’: Function to merge ‘RLum.Results’
           objects

         • ‘get_structure.RLum.Analysis()’: to parse the structure of
           an ‘RLum.Analysis’ object

         • ‘set_Risoe.BINfileData()’: Constructor method for
           ‘Risoe.BINfileData’ objects

  New Functions:

         • ‘plot_RLum()’: Wrapper function for plotting various
           ‘RLum’-objects

         • ‘plot_RLum.Data.Curve()’: Plot function for
           ‘RLum.Data.Curve’ objects. Usually accessed by ‘plot_RLum()’

         • ‘plot_RLum.Analysis()’: Plot function for ‘RLum.Analysis’
           objects. Usually accessed by ‘plot_RLum()’

         • ‘Risoe.BINfileData2RLum.Analysis()’: Converts parts of an
           ‘Risoe.BINfileData’ object to an ‘RLum.Analysis’ object,
           depending on the chosen position, run/set or record id.

         • ‘Risoe.BINfileData2RLum.Data.Curve()’: Lossy conversion of
           an ‘Risoe.BINfileData’ object to an ‘RLum.Data.Curve’ object

         • ‘writeR2BIN()’: Function to export ‘Risoe.BINfileData’
           objects to BIN or BINX files

         • ‘merge_Risoe.BINfileData()’: Merge BIN/BINX files or
           ‘Risoe.BINfileData’ objects

         • ‘analyse_SAR.CWOSL()’: Function to analyse SAR CW-OSL
           measurements, will at some time replace the exisiting
           function ‘Analyse_SAR.OSLdata’

         • ‘analyse_SAR.TL()’: Function to analyse SAR TL measurements
           (beta version)

         • ‘calc_TLLxTxRatio()’: Function to calculate Lx/Tx ratios for
           TL curves used by ‘analyse_SAR.TL()’ (beta version)

         • ‘analyse_IRSAR.RF()’: Function to analyse IRSAR RF
           measurements according to Erfurt et al. (2003)

         • ‘calc_CosmicDoseRate()’: Function to calculate the cosmic
           dose rate

         • ‘calc_HomogeneityTest()’: Function to apply the homogenity
           test after Galbraith (2003)

         • ‘calc_AliquotSize()’: Function to estimate the amount of
           grains on an aliquot

         • ‘readXSYG2R()’: Function to support the Freiberg Instruments
           XSYG file format

  New Data Sets:

         • ‘ExampleData.RLum.Analysis’: Luminescence dating measurement
           dataset as ‘RLum.Analysis’ object

         • ‘BaseDataSet.CosmicDoseRate’: Data set used by the function
           ‘calc_CosmicDoseRate()’

         • ‘ExampleData.BINfileData’: dataset now contains two objects
           ‘CWOSL.SAR.Data’ and ‘TL.SAR.Data’ (depending examples have
           been modified)

  Function Renaming:

         • ‘Calc_OSLLxTxRatio()’: Function renamed to
           ‘calc_OSLLxTxRatio()’

         • ‘Calc_CommonDose()’: Function renamed to ‘calc_CommonDose()’

         • ‘Calc_CentralDose()’: Function renamed to
           ‘calc_CentralDose()’

         • ‘Calc_FiniteMixture()’: Function renamed to
           ‘calc_FiniteMixture()’

         • ‘Calc_MinDose3()’: Function renamed to ‘calc_MinDose3()’

         • ‘Calc_MinDose4()’: Function renamed to ‘calc_MinDose4()’

         • ‘Calc_FadingCorr()’: Function renamed to ‘calc_FadingCorr()’

         • ‘Calc_FuchsLang2001()’: Function renamed to
           ‘calc_FuchsLang2001()’

         • ‘plot_BINfileData()’: Function renamed to
           ‘plot_Risoe.BINfileData()’ for the sake of consistency

  Bug Fixes and Further Changes:

         • ‘calc_OSLLxTxRatio()’: Function now allows for a ‘matrix’ as
           input object

         • ‘calc_OSLLxTxRatio()’: Function now returns an
           ‘RLum.Results’ object

         • ‘Analyse_SAR.OSLdata()’: Function modified according to the
           changes in the function ‘calc_OSLLxTxRatio()’

         • ‘Analyse_SAR.OSLdata()’: Function corrected for an error
           that occured with more than one recyling point

         • ‘Analyse_SAR.OSLdata()’: Function corrected for an error
           that occured when the dose of the first recycling point was
           used twice

         • ‘Risoe.BINfileData-class’: An error in the show method has
           been corrected

         • ‘plot_GrowthCurve()’: An error occurred if no fitting could
           be applied. Corrected by setting De to NA

         • ‘plot_GrowthCurve()’: The function now checks if at least
           two regeneration points are given

         • ‘plot_GrowthCurve()’: Function corrected for an infinite
           loop error occured using only two dose points and the EXP
           fit option

         • ‘plot_GrowthCurve()’: The function now provides an extra
           argument ‘na.exclude’ to exclude ‘NA’ values

         • ‘plot_KDE()’: The function now provides an extra argument
           ‘na.exclude’ to exclude ‘NA’ values

         • ‘plot_KDE()’: The function now allows for an ‘RLum.Results’
           object as input object

         • ‘plot_KDE()’: The function now allows for plotting multiple
           data sets

         • ‘plot_Histogram()’: The function now provides an extra
           argument ‘na.exclude’ to exclude ‘NA’ values

         • ‘plot_Histogram()’: The function now allows for an
           ‘RLum.Results’ object as input object

         • ‘plot_RadialPlot()’: The function now provides an extra
           argument ‘na.exclude’ to exclude ‘NA’ values

         • ‘CW2pLMi()’: A test has been implemented to check if P=0
           (which is not allowed)

         • ‘CW2pLMi()’: Now an ‘RLum.Data.Curve’ object is allowed as
           input and an object of the same data type as the input will
           be returned

         • ‘CW2pHMi()’: Now an ‘RLum.Data.Curve’ object is allowed as
           input and an object of the same data type as the input will
           be returned

         • ‘CW2pPMi()’: Now an ‘RLum.Data.Curve’ object is allowed as
           input and an object of the same data type as the input will
           be returned

         • ‘CW2pLM()’: Now an ‘RLum.Data.Curve’ object is allowed as
           input and an object of the same data type as the input will
           be returned

         • ‘fit_CWCurve()’: The function now returns an ‘RLum.Results’
           object and as input an ‘RLum.Data.Curve’ object is now
           allowed

         • ‘fit_CWCure()’: An additional
           ‘component.contribution.matrix’ is now returned to allow for
           individual component to sum contribution plots

         • ‘fit_CWCure()’: A critical error has been corrected in the
           used fitting equation. Now it has been set to f(t) =
           I0[i]*lambda[i]*exp(-lambda[i]*t)

         • ‘fit_LMCurve()’: The function now returns an ‘RLum.Results’
           object and as input an ‘RLum.Data.Curve’ object is now
           allowed

         • ‘fit_LMCure()’: An additional
           ‘component.contribution.matrix’ is now returned to allow for
           individual component to sum contribution plots

         • ‘readBIN2R()’: BINX file format support has been added

         • ‘readBIN2R()’: An argument ‘forced.VersionNumber’ has been
           added to cheat the internal version check routine if needed

         • ‘Risoe.BINfileData-class’: The *.binx file format support
           has been added

  Internals:

         • We partially started to create package documentation using
           the R pacakge 'inlinedocs', meaning that the documentation
           is now be part of the source code itself

         • A namespace .LuminescenceEnv in zzz.R has been added

         • A variable ‘col’ has been added to the namespace
           ‘.LuminescenceEnv’ in the file zzz.R to define a standard
           colour palette for graphical output in package

         • NEWS are now provided as *.Rd file; der corresponding ASCII
           file is produced using the function Rd2txt

         • An unicode character for the temperature degree symbol 'deg.
           C' has been added

         • The S4-object structure has been added as PDF documentation
           to the package

