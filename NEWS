NEWS for the R Package Luminescence

Changes in version 0.7.3 (8th Feburary, 2017):

  Bugfixes and changes:

         • ‘Risoe.BINfileData()’

             • Correct for mistakes in the manual.

         • ‘write_R2BIN()’

             • Correct for broken function (introduced with v0.7.0).

  Miscellaneous:

         • Correct wrong package date format.

         • Add NEWS again to the package.

Changes in version 0.7.2 (7th Feburary (evening), 2017):

        • The CRAN check on the Solaris machines gave an error while
          performing the (on all other platform sucessful) unit tests.
          Consequently, and to reduce the load for the CRAN resources
          all tests are skipped on CRAN.

        • This version never made it on CRAN!

Changes in version 0.7.1 (6th February (evening), 2017):

        • This release accounts for the CRAN check errors on the
          Solaris machines by preventing the unfortunate overload of
          the C++ function pow() with integer values.

Changes in version 0.7.0 (6th February (morning), 2017):

  New functions:

         • ‘analyse_FadingMeasurement()’: Analyse fading measurements
           to calculate g-values and to estimate the density of
           recombination centres.

         • ‘analyse_portableOSL()’: The function analyses CW-OSL curve
           data produced by a SUERC portable OSL reader and produces a
           combined plot of OSL/IRSL signal intensities, OSL/IRSL
           depletion ratios and the IRSL/OSL ratio.

         • ‘calc_Kars2008()’: A function to calculate the expected
           sample specific fraction of saturation following Kars et al.
           (2008) and Huntley (2006).

         • ‘calc_AverageDose()’: Function to calculate the average dose
           and their extrinsic dispersion.

         • ‘convert_BIN2R()’: wrapper function around the functions
           ‘read_BIN2R()’ and ‘write_RLum2CSV()’ to convert a BIN-file
           to CSV-files; so far possible.

         • ‘convert_Daybreak2R()’: wrapper function around the
           functions ‘read_Daybreak2R()’ and ‘write_RLum2CSV()’ to
           convert Daybreak measurement data (TXT-file, DATE-file) to
           CSV-files; so far possible.

         • ‘convert_PSL2R()’: wrapper function around the functions
           ‘read_PSL2R()’ and ‘write_RLum2CSV()’ to convert a PSL-file
           (SUERC portable OSL reader file format) to CSV-files; so far
           possible.

         • ‘convert_XSYG2R()’: wrapper function around the functions
           ‘read_XSYG2R()’ and ‘write_RLum2CSV()’ to convert XSYG-file
           to CSV-files; so far possible.

         • ‘github_branches(), github_commits(), github_issues()’: R
           Interface to the GitHub API v3. These functions can be used
           to query a specific repository hosted on GitHub.

         • ‘install_DevelopmentVersion()’: This function is a
           convenient method for installing the development version of
           the R package 'Luminescence' directly from GitHub.

         • ‘PSL2Risoe.BINfileData()’: Converts an ‘RLum.Analysis’
           object produced by the function ‘read_PSL2R()’ to an
           ‘Risoe.BINfileData’ object.

         • ‘read_PSL2R()’: Imports PSL files produced by a SUERC
           portable OSL reader into R.

         • ‘smooth_RLum()’: wrapper function to call the corresponding
           methods to smooth data based on the function ‘zoo:rollmean’.

         • ‘write_RLum2CSV()’: Exports ‘RLum’-objects to CSV-files to
           improve the compatibility to other software.  Supported are
           only numerical values, i.e., ‘data.frame’, ‘matrix’ and
           ‘numeric’.

  New example data:

         • ‘ExampleData.fading’: Example data set for fading
           measurements of the IR50, IR100, IR150 and IR225 feldspar
           signals of sample UNIL/NB123. It further contains regular
           equivalent dose measurement data of the same sample, which
           can be used to apply a fading correction to. These data were
           kindly provided by Georgina King.

  Changes in S4-classes and methods:

         • Method ‘get_RLum’ for ‘RLum.Analysis’-objects did not
           respect ‘.pid’, fixed.

         • Method ‘get_RLum’ for ‘list’-objects now accepts lists with
           all kinds of ‘RLum’-objects. Previously, only lists of
           ‘RLum.Analysis’-objects were allowed.

         • ‘plot_RLum’ was not passing the argument ‘sub’, as it was
           fetched by the partial argument matching; fixed.

         • ‘set_RLum’ produced ‘NA’ as originator, if the function
           calling the function ‘set_RLum()’ was called from outside of
           the package using the double colons (e.g.,
           ‘Luminescence::function()’); fixed.

         • ‘smooth_RLum’ add method support for ‘RLum.Data.Curve’,
           ‘RLum.Analysis’ and ‘list’ of this objects implemented.

  Bugfixes and changes:

         • ‘analyse_baSARL()’

             • Due to a typo in the manual the ‘method_control’
               parameter ‘variable.names’ was not working if correctly
               typed as written in the manual (in the manual:
               'variables.names', but correct is 'variable.names');
               typo corrected fixed,

             • minor improvements and error corrections.

             • ‘analyse_IRSAR.RF()’

                 • Add option for a vertical sliding of the RF_nat
                   curve (‘method_control = list(vslide_range =
                   'auto')’). This feature has beta status and usage
                   for publication work is not recommended yet. By
                   default no vertical sliding is applied,

                 • allow a parallel processing of MC runs by using the
                   argument ‘method_control = list(cores = 'auto')’.

             • ‘analyse_SAR.CWOSL()’

                 • Fix wrongly set threshold value for recuperation
                   rate (#26),

                 • fix a rare bug for the combination 'recyling.ratio =
                   NA' and more than one provided recyling point,

                 • a check has been implemented to refrain from using
                   wrong rejection criteria keywords.

             • ‘calc_AliquotSize()’

                 • Console output can now be suppressed via 'verbose =
                   TRUE' (#24).

             • ‘calc_CosmicDoseRate()’

                 • Console output can now be suppressed via 'verbose =
                   TRUE' (#24).

             • ‘calc_FastRatio()’

                 • New arguments 'Ch_L2' and 'Ch_L3' to allow the user
                   to specify custom values for channels L2 and L3.
                   Feature requested by A. Versendaal (#29).

             • ‘calc_FadingCorr()’

                 • Fixed a bug where the function would crash when
                   providing an ‘RLum.Results’ object for ‘g_value’,

                 • new argument ‘interval’ to control the age interval
                   for solving the equation via ‘uniroot’.

             • ‘calc_FiniteMixture()’

                 • Fixed a bug where certain arguments where not passed
                   to `plot_RLum.Results` so that the plot was not as
                   customisable as intended.  Thanks to Daniele
                   Questiaux for reporting the bug.

             • ‘calc_MaxDose()’

                 • Fixed a bug in the console output, which provided
                   wrong values for the asymmetric error on gamma (Note
                   that the values in the output object were correct!).
                   Thankfully reported by Xue Rui.

             • ‘calc_Statistics()’

                 • The argument ‘n.MC’ got a new value ‘NULL’ which is
                   now used as default. With this the basic statistical
                   measures are in accordance with the expectations
                   (e.g., the standard deviation is returned by default
                   in the conventional way and not calculated using an
                   MC simulation).

             • ‘calc_OSLLxTxRatio()’

                 • Add argument ‘use_previousBG’ to use the background
                   of the Lx-curve to get the net signal of the
                   Tx-curve (request #15).

             • ‘fit_CWCurve()’

                 • Change order of ‘RLum.Results’ output list elements,

                 • rename first element to ‘data’,

                 • add element slot 'info'.

             • ‘fit_LWCurve()’

                 • Change order of ‘RLum.Results’ output list elements,

                 • rename first element to ‘data’,

                 • add element slot 'info'.

             • ‘model_LuminescenceSignals()’

                 • Update function arguments to account for changes in
                   RLumModel version 0.2.0.

             • ‘plot_DetPlot()’

                 • Correct negative y-axis, the minimum is now the real
                   minimum.

             • ‘plot_GrowthCurve()’

                 • Reduce number of confusing warning,

                 • add new argument ‘mode’ to select the calculation
                   mode of the function.  This allows in particular to
                   only fit data without calculating a De or
                   calculating a De assuming an additive dose response
                   curve,

                 • account for the very specifc case that all dose
                   points are similar. The function stops with an error
                   and returns NULL,

                 • under weird circumstances points on the growth curve
                   were not plotted correctly; fixed.

             • ‘plot_RadialPlot()’

                 • Sometimes the function crashed with an out of bonds
                   error if more than one data set was provided; fixed,

                 • argument ‘negatives’ caused an error if not set to
                   ‘'remove'’ and fix some errors around this option,

                 • De-adjustment for negative values optimised for
                   large scatter.

             • ‘plot_RLum.Analysis()’

                 • The usage of the argument ‘smooth’ led to a crash;
                   fixed.

             • ‘plot_RLum.Data.Curve()’

                 • Function will not stop anymore if the curve contains
                   ‘NA’ values, but if the curve consists of only ‘NA’
                   values.

             • ‘plot_RLum.Data.Spectrum()’

                 • The interactive plot option was broken with the last
                   update of the package 'plotly'; fixed.

             • ‘plot_ViolinPlot()’

                 • The function erroneously produced a NA value
                   warning; fixed.

             • ‘read_BIN2R()’

                 • If BIN-files are automatically imported the function
                   skipped non BIN-files without crashing if it is used
                   in combination with the argument ‘pattern’,

                 • add new argument ‘irgnore.RECTYPE’ to provide a
                   solution for broken BIN-files are BIN-files with non
                   documented entries. Furthermore the general
                   behaviour for such cases had been optimised.

             • ‘read_Daybreak2R()’

                 • Add support for DAT-files produced by at 1100 reader
                   using the software (TLAPLLIC v.3.2).  Thanks to
                   Antoine Zink,

                 • minor error corrections and adding example code.

             • ‘template_DRAC()’

                 • Fixed a typo in the column names (#28).

             • ‘use_DRAC()’

                 • Now supports DRAC v1.2 and the newly introduced CSV
                   input template.  Older v1.1 excel sheet input
                   templates are still supported, but users are highly
                   encouraged to use the new CSV file.

                 • Columns in the output tables are now assigned proper
                   classes (#27).

  Internals:

         • The internal function converting BIN-file curves to
           RLum.Data.Curve() objects had been optimised and, amongst
           others, now uses a function written using Rcpp to create the
           curve matrix.  The conversion now works ca. two times
           faster,

         • add ‘`[<-]`’ method for ‘RLum.Data.Curve’ objects,

         • a hint on how to cite a function is now added automatically
           to every major function manual page,

         • add 'magrittr' to the package dependencies (imports) to
           further support the usage of this amazing pipe operator,

         • thanks to Johannes Friedrich this release introduces regular
           unit tests using the package 'testthat' to improve the code
           quality and stability,

         • add internal helper function ‘.smoothing’; no Rd entry.

